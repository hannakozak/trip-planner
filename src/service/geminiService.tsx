import { GoogleGenerativeAI } from '@google/generative-ai';

const API_KEY = import.meta.env.VITE_GOOGLE_GEMINI_AI_API_KEY;

const genAI = new GoogleGenerativeAI(API_KEY);

const model = genAI.getGenerativeModel({
  model: 'gemini-1.5-flash',
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: 'application/json',
};
export const generateTravelPlan = model.startChat({
  generationConfig,
  history: [
    {
      role: 'user',
      parts: [
        {
          text: 'Generate Travel Plan for Location : {location}, for {noOfDays} Days for {noOfPeople} with a {budget} budget, give me Hotels options list with HotelName, Hotel address, Price, hotel image url, geo coordinates, rating, descriptions and suggest itinerary with placeName, Place Details, Place Image Url, Geo Coordinates, ticket Pricing, Time travel each of the location for {noOfDays} with each day plan with best time to visit in JSON format',
        },
      ],
    },
    {
      role: 'model',
      parts: [
        {
          text: 'Here\'s a breakdown of the thinking process behind generating the travel plan:\n\n1. **Understanding the Request:**  The request is to generate a multi-day travel itinerary for a specified location, duration, number of people, and budget.  It needs to include:\n    * **Hotel Options:**  A list of hotels with detailed information (name, address, price, image URL, geo-coordinates, rating, description).\n    * **Itinerary:** A day-by-day plan with place names, descriptions, image URLs, geo-coordinates, ticket pricing, travel time between locations, and best time to visit each location.\n    * **Output Format:** JSON.\n\n2. **Deconstructing the Request into Components:**  To fulfill this request, I need to address several key tasks:\n\n    * **Location Understanding:** I need to understand the user\'s specified `{location}`. This means I need to have knowledge about popular tourist locations and their attractions.\n    * **Budget Consideration:**  The `{budget}` is crucial for selecting hotels and suggesting activities. I need to interpret "budget" (e.g., "low," "medium," "high," or a numerical range) and apply it to pricing.\n    * **Hotel Research:**  I need to simulate the process of finding hotels in the specified location, considering the budget.  This includes gathering hotel details like name, address, price, images, geo-coordinates, ratings, and descriptions.\n    * **Attraction Research:** I need to identify popular tourist attractions in the location and gather information about them: name, description, images, geo-coordinates, ticket price, and best time to visit.\n    * **Itinerary Planning:**  This is the core logic. It involves:\n        * Distributing attractions across the specified `{noOfDays}`.\n        * Considering travel time between locations to create a realistic schedule.\n        * Optimizing the itinerary for a good flow (e.g., grouping geographically close attractions).\n        * Suggesting the best time to visit each location within the day.\n    * **JSON Formatting:**  All the information needs to be structured and outputted in JSON format as requested.\n\n3. **Pre-computation/Knowledge Base (Simulated):**  Since I\'m a language model, I don\'t "research" in real-time like a human.  Instead, I leverage my pre-existing knowledge base.  For this example, let\'s assume I have access to or can simulate access to:\n\n    * **Location Data:**  Information about popular tourist locations globally, including attractions, hotel types, typical prices, transportation, etc.\n    * **Hotel Databases (Simulated):**  A simplified dataset of hotels in various locations, including the required details (name, address, price, etc.).  This is crucial for generating realistic hotel options.\n    * **Attraction Databases (Simulated):** A similar dataset for tourist attractions, including details like description, images, prices, timings, etc.\n    * **Geographical Data:**  Basic geographical information to estimate travel times (although a real-world application would use mapping APIs).\n\n4. **Step-by-Step Plan Generation (Algorithm):**\n\n    a. **Location Processing:** Understand the `{location}`.  Let\'s assume for this example the location is "Paris".\n\n    b. **Budget Interpretation:**  Understand the `{budget}`. Let\'s assume it\'s "Medium".  This will guide hotel and activity selection to be moderately priced.\n\n    c. **Hotel Selection:**\n        * **Query Simulated Hotel Database:** Search for hotels in "Paris" with a "medium" price range.\n        * **Filter and Select:**  Choose a few representative hotels (e.g., 3-4) that fit the budget and offer variety (e.g., different styles or locations within Paris).\n        * **Gather Hotel Details:**  Retrieve (or simulate) the required details for each selected hotel: name, address, price (within the medium range), image URL (placeholder), geo-coordinates (example), rating (example), description (generic).\n\n    d. **Attraction Selection:**\n        * **Query Simulated Attraction Database:** Search for popular attractions in "Paris".\n        * **Filter and Select:** Choose attractions that are iconic and provide a good representation of Paris (Eiffel Tower, Louvre, Notre Dame, Seine River Cruise, Montmartre).  Spread them across different days to avoid overwhelming a single day.\n\n    e. **Itinerary Construction (Day-by-Day):**\n        * **Day 1:** Start with a major landmark (Eiffel Tower), followed by a nearby attraction (Seine River Cruise). Consider travel time between them (e.g., metro/walk).\n        * **Day 2:** Focus on art and culture (Louvre, Notre Dame).  Again, consider location proximity and travel time.\n        * **Day 3:** Explore a different neighborhood (Montmartre).  Include a different type of experience (art district, Sacré-Cœur).\n        * **Day 4:**  Suggest something slightly different or less intense (museum, gardens). For example, a museum like Musée d\'Orsay.  *(Initially, I planned for 3 days as per the example, but the request is for `{noOfDays}`. If the user had requested 4 days, I would extend the itinerary).*\n\n    f. **Detail Gathering for Attractions:** For each selected attraction:\n        * **Retrieve Details:**  Get (or simulate) name, description, image URL (placeholder), geo-coordinates (example), ticket pricing (estimate based on "medium" budget), best time to visit (general advice for popular tourist spots).\n        * **Estimate Travel Time:**  Make a rough estimate of travel time between locations, assuming common transportation methods (metro, walking) in a city like Paris. *A real application would use mapping services for this.*\n\n    g. **JSON Formatting:**  Structure all the collected information into a JSON object according to the requested format:\n\n        ```json\n        {\n          "location": "Paris",\n          "numberOfDays": 3,\n          "numberOfPeople": 2,\n          "budget": "Medium",\n          "hotelOptions": [ ... hotel objects ... ],\n          "itinerary": {\n            "day1": { ... day 1 plan ... },\n            "day2": { ... day 2 plan ... },\n            "day3": { ... day 3 plan ... }\n          }\n        }\n        ```\n\n5. **Refinement and Considerations:**\n\n    * **Realism:** The generated plan should be somewhat realistic in terms of travel times and the flow of activities.\n    * **Variety:**  Include a mix of different types of attractions (landmarks, museums, cultural sites, experiences).\n    * **Flexibility:**  Acknowledge that the plan is a suggestion and users can customize it.\n    * **Placeholders:** Use placeholders for image URLs, geo-coordinates, and prices, as generating real-time, accurate data is beyond the scope of a simple response.  Clearly indicate these are examples.\n    * **Budget Sensitivity:**  Ensure that the suggested hotels and activities are generally aligned with the specified budget level.  "Medium" should avoid extremely luxurious or extremely budget options.\n    * **Time of Year:**  Ideally, a real-world application would consider the time of year for "best time to visit," but for a general example, generic advice is sufficient.\n\n\nBy following these steps, I can generate a plausible and structured travel plan that addresses all aspects of the user\'s request, even with simulated data and placeholder information.  The key is breaking down the complex request into smaller, manageable tasks and then assembling the results in the desired JSON format.',
        },
        {
          text: "Okay, I can help you with that! To provide you with the best travel plan, please provide me with the following details:\n\n*   **Location:**  The city or region you want to visit (e.g., Paris, Bali, Tokyo, New York City).\n*   **Number of Days:** How many days will you be traveling for (e.g., 3, 5, 7).\n*   **Number of People:** How many people are in your travel group (e.g., 1, 2, 4, family with kids).\n*   **Budget:**  Please specify your budget as:\n    *   **Low Budget/Budget-Friendly:** Focus on hostels, budget hotels, free activities, and affordable food.\n    *   **Medium Budget/Mid-Range:** Comfortable hotels, a mix of paid and free activities, and moderately priced restaurants.\n    *   **High Budget/Luxury:** Luxury hotels, fine dining, private tours, and premium experiences.\n\nOnce you provide these details, I will generate a JSON output containing:\n\n*   **Hotel Options:** A list of hotels matching your budget with the requested details.\n*   **Itinerary:** A day-by-day plan with place names, details, image URLs, geo-coordinates, ticket prices, and travel time between locations, including the best time to visit each place.\n\n**Example:**\n\nLet's assume you provide the following details:\n\n*   **Location:** Paris\n*   **Number of Days:** 3\n*   **Number of People:** 2\n*   **Budget:** Medium Budget\n\nBased on this, I",
        },
      ],
    },
    {
      role: 'user',
      parts: [
        {
          text: 'Generate Travel Plan for Location : {location}, for {noOfDays} Days for {noOfPeople} with a {budget} budget, give me Hotels options list with HotelName, Hotel address, Price, hotel image url, geo coordinates, rating, descriptions and suggest itinerary with placeName, Place Details, Place Image Url, Geo Coordinates, ticket Pricing, Time travel each of the location for {noOfDays} with each day plan with best time to visit in JSON format\n',
        },
      ],
    },
    {
      role: 'model',
      parts: [
        {
          text: "I need the values for {location}, {noOfDays}, {noOfPeople}, and {budget} to generate the travel plan.  Please provide those details.  For example:\n\n```\nLocation: Paris\nnoOfDays: 5\nnoOfPeople: 2\nbudget: Medium\n```\n\nOnce you provide this information, I will generate the JSON output as requested.  Keep in mind that I will be using placeholder data for image URLs, geo-coordinates, and some pricing details, as I cannot access real-time data sources.  The plan will be a realistic suggestion based on my knowledge base, but it won't be a fully accurate, real-time booking service.\n",
        },
      ],
    },
    {
      role: 'user',
      parts: [
        {
          text: 'Generate Travel Plan for Location : opole, for 4 Days for 3 with a cheap budget, give me Hotels options list with HotelName, Hotel address, Price, hotel image url, geo coordinates, rating, descriptions and suggest itinerary with placeName, Place Details, Place Image Url, Geo Coordinates, ticket Pricing, Time travel each of the location for 4 with each day plan with best time to visit in JSON format',
        },
      ],
    },
    {
      role: 'model',
      parts: [
        {
          text: '```json\n{\n  "location": "Opole, Poland",\n  "noOfDays": 4,\n  "noOfPeople": 3,\n  "budget": "cheap",\n  "hotelOptions": [\n    {\n      "hotelName": "Hotel Example 1",\n      "hotelAddress": "Example Address 1, Opole, Poland",\n      "price": "€30-€40 per night",\n      "hotelImageUrl": "placeholder_image_url_1.jpg",\n      "geoCoordinates": [50.67, 17.93], \n      "rating": 3.5,\n      "description": "A budget-friendly hotel in central Opole.  Basic amenities, clean rooms."\n    },\n    {\n      "hotelName": "Hostel Example 2",\n      "hotelAddress": "Example Address 2, Opole, Poland",\n      "price": "€20-€25 per night per person",\n      "hotelImageUrl": "placeholder_image_url_2.jpg",\n      "geoCoordinates": [50.68, 17.92],\n      "rating": 3.8,\n      "description": "A hostel with dorm rooms and private rooms available. Social atmosphere."\n    }\n\n  ],\n  "itinerary": {\n    "day1": {\n      "plan": [\n        {\n          "placeName": "Opole Castle",\n          "placeDetails": "A medieval castle with historical exhibits.  Beautiful views from the grounds.",\n          "placeImageUrl": "placeholder_image_url_castle.jpg",\n          "geoCoordinates": [50.676, 17.928],\n          "ticketPricing": "€5 per person (estimated)",\n          "timeTravel": "0 minutes (assuming hotel is near the centre)",\n          "bestTimetoVisit": "Morning to avoid crowds."\n        },\n        {\n          "placeName": "Plac Wolności (Freedom Square)",\n          "placeDetails": "The central square of Opole, a great place to people-watch and grab a cheap bite.",\n          "placeImageUrl": "placeholder_image_url_square.jpg",\n          "geoCoordinates": [50.678, 17.93],\n          "ticketPricing": "Free",\n          "timeTravel": "10 minutes walk from Opole Castle",\n          "bestTimetoVisit": "Afternoon"\n        }\n      ]\n    },\n    "day2": {\n      "plan": [\n        {\n          "placeName": "Archcathedral Basilica of St. John the Baptist",\n          "placeDetails": "An impressive basilica in the city centre, a beautiful example of religious architecture",\n          "placeImageUrl": "placeholder_image_url_basilica.jpg",\n          "geoCoordinates": [50.679, 17.934],\n          "ticketPricing": "Free",\n          "timeTravel": "15 minutes walk from Freedom Square",\n          "bestTimetoVisit": "Morning or late afternoon"\n        },\n        {\n          "placeName": "Opole Regional Museum",\n          "placeDetails": "Learn about the history and culture of Opole region.",\n          "placeImageUrl": "placeholder_image_url_museum.jpg",\n          "geoCoordinates": [50.675, 17.931],\n          "ticketPricing": "€3 per person (estimated)",\n          "timeTravel": "10 minutes walk from the Basilica",\n          "bestTimetoVisit": "Mid-morning to avoid crowds"\n        }\n      ]\n    },\n    "day3": {\n      "plan": [\n        {\n          "placeName": "Wzgórze Świętej Anny (Saint Anne\'s Hill)",\n          "placeDetails": "A scenic hill with a basilica and panoramic views (requires transport outside Opole)",\n          "placeImageUrl": "placeholder_image_url_hill.jpg",\n          "geoCoordinates": [50.731, 18.077],\n          "ticketPricing": "Bus ticket + potential basilica entry fee (estimate €10 total)",\n          "timeTravel": "30 minutes by bus (estimated, check local transport)",\n          "bestTimetoVisit": "All day, but consider sunset for beautiful views"\n        }\n      ]\n    },\n    "day4": {\n      "plan": [\n        {\n          "placeName": "Explore Opole\'s Old Town",\n          "placeDetails": "Wander through the charming streets, discover hidden cafes and local shops.",\n          "placeImageUrl": "placeholder_image_url_oldtown.jpg",\n          "geoCoordinates": "[50.676, 17.93] (general area)",\n          "ticketPricing": "Free",\n          "timeTravel": "Walkable from your hotel",\n          "bestTimetoVisit": "Morning or afternoon, depending on your preference"\n        }\n      ]\n    }\n  }\n}\n```\n\n**Important Notes:**\n\n* **Placeholder Data:**  Image URLs, some geo-coordinates, and pricing are placeholders.  You\'ll need to replace these with actual data using online resources like Google Maps, hotel booking sites, and the official websites of the attractions.\n* **Travel Times:** Travel times are estimates.  Use Google Maps or a similar service for precise calculations based on your chosen accommodation.\n* **Cheap Budget:** This itinerary focuses on free or low-cost activities.  Food costs are not included in the budget, and you should factor that into your overall expenses.\n* **Transportation:**  Consider local bus routes or walking as cost-effective transportation methods.\n* **Seasonality:**  The best time to visit Opole depends on your preferences.  Summer is generally pleasant but can be crowded.  Spring and autumn offer milder weather and fewer crowds.\n\n\nRemember to verify all information (opening times, prices, etc.) with official sources before your trip.  Enjoy your trip to Opole!\n',
        },
      ],
    },
    {
      role: 'user',
      parts: [{ text: 'INSERT_INPUT_HERE' }],
    },
  ],
});
